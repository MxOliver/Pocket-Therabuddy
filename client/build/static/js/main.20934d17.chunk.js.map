{"version":3,"sources":["components/partials/NavBar.jsx","constants/userConstants.js","constants/alertCon.js","actions/alertActions.js","helpers/authHeader.js","services/userService.js","helpers/history.js","actions/userActions.js","components/Landing.jsx","components/partials/HistoryNav.jsx","constants/moodConstants.js","services/moodService.js","actions/moodActions.js","components/mood/AddMood.jsx","components/mood/MoodHistory.jsx","components/Dashboard.jsx","components/mood/Jumbotron.jsx","components/partials/SignIn.jsx","components/partials/SignUp.jsx","components/App.jsx","reducers/authReducer.js","reducers/index.js","reducers/alertReducer.js","reducers/moodReducer.js","store/index.js","index.js"],"names":["NavBar","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","mdbreact_esm","color","dark","expand","className","left","active","to","Component","userConstants","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","GETCURRENT_REQUEST","GETCURRENT_SUCCESS","GETCURRENT_FAILURE","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE","alertConstants","SUCCESS","ERROR","CLEAR","alertActions","success","message","type","error","clear","authHeader","user","JSON","parse","localStorage","getItem","token","Authorization","userService","login","logout","removeItem","register","getById","update","requestOptions","method","headers","objectSpread","Content-Type","body","stringify","fetch","concat","id","then","handleResponse","getCurrent","delete","_callee","response","currentUser","regenerator_default","wrap","_context","prev","next","sent","setItem","abrupt","stop","_callee2","_context2","_callee3","res","_context3","text","console","log","_callee4","_context4","data","ok","statusText","Promise","reject","history","createBrowserHistory","userActions","email","password","dispatch","push","failure","toString","request","getCurrentUser","ConnectedLandingPage","_this","handleLogOut","bind","assertThisInitialized","e","preventDefault","buttonComponent","outline","onClick","Link","style","icon","far","LandingPage","connect","state","authentication","MoodNav","textStyle","navItemStyle","paddingRight","flex-direction","margin","marginBottom","moodConstants","ADD_MOOD","ADD_SUCCESS","ADD_ERROR","MOODHISTORY_REQUEST","MOODHISTORY_SUCCESS","MOODHISTORY_FAILURE","moodService","add","getHistory","mood","moodActions","addMood","getMoodHistory","moods","ConnectedMoodForm","moodselect","moodlevel","notes","isChecked","handleSubmit","handleChange","_e$target","target","name","value","setState","defineProperty","_this$props","newMood","moodnotes","date","Date","userId","radioStyle","background","border","HistoryNav","onSubmit","htmlFor","onChange","center","list","width","marginTop","label","rows","cols","AddMood","saveMood","ConnectedMoodHistory","dataLoaded","fetchHistory","MoodHistory","ConnectedDashboard","Dashboard","MoodJumbotron","ConnectedSignIn","loggedIn","submitted","loggingIn","_this$state","md","group","validate","SignInForm","ConnectedUserForm","passwordConfirmation","SignUpForm","registration","connectedApp","listen","location","action","alert","Router","partials_NavBar","Switch","Route","exact","path","component","Landing","expact","App","initialState","rootReducer","combineReducers","arguments","length","undefined","addingMood","moodAdded","loading","items","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"0LAiCeA,cA7BX,SAAAA,EAAYC,GAAO,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,6EAMf,OACII,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,MAAM,iBAAiBC,MAAI,EAACC,OAAO,MAC9CN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,UAAQK,UAAU,cAAlB,sBAGJP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcK,MAAI,GAClBR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYM,QAAM,GAChBT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYO,GAAG,IAAIH,UAAU,cAA7B,SAEFP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYM,QAAM,GAChBT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYO,GAAG,aAAaH,UAAU,cAAtC,cAEFP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYO,GAAG,eAAeH,UAAU,cAAxC,yBArBOI,oCCHRC,EAAgB,CACzBC,iBAAkB,yBAClBC,iBAAkB,yBAClBC,iBAAkB,yBAElBC,cAAe,sBACfC,cAAe,sBACfC,cAAe,sBAEfC,OAAQ,eAERC,eAAgB,uBAChBC,eAAgB,uBAChBC,eAAgB,uBAEhBC,mBAAoB,2BACpBC,mBAAoB,2BACpBC,mBAAoB,2BAEpBC,eAAgB,uBAChBC,eAAgB,uBAChBC,eAAgB,wBCrBPC,EAAiB,CAC1BC,QAAS,gBACTC,MAAO,cACPC,MAAO,eCDEC,EAAe,CACxBC,QAKJ,SAAiBC,GACb,MAAO,CAAEC,KAAMP,EAAeC,QAASK,YALvCE,MAQJ,SAAeF,GACX,MAAO,CAAEC,KAAMP,EAAeE,MAAOI,YARrCG,MAWJ,WACI,MAAO,CAAEF,KAAMP,EAAeG,8CCjB3B,SAASO,IACZ,IAAIC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAE3C,OAAIJ,GAAQA,EAAKK,MACN,CAAEC,cAAiB,UAAYN,EAAKK,OAEpC,GCJR,IAAME,EAAc,CACvBC,kDACAC,OAqBJ,WACIN,aAAaO,WAAW,SArBxBC,qDACAC,oDACAC,OAqDJ,SAAgBb,GACZ,IAAMc,EAAiB,CACnBC,OAAQ,MACRC,QAAQ9D,OAAA+D,EAAA,EAAA/D,CAAA,GAAM6C,IAAP,CAAqBmB,eAAgB,qBAC5CC,KAAMlB,KAAKmB,UAAUpB,IAGzB,OAAOqB,MAAK,cAAAC,OAAetB,EAAKuB,IAAMT,GAAgBU,KAAKC,IA3D3DC,WAqBJ,WACI,IAAMZ,EAAiB,CACnBC,OAAQ,MACRC,QAASjB,KAGb,OAAOsB,MAAK,YAAcP,GAAgBU,KAAKC,IA1B/CE,+FAGJ,SAAAC,EAAqB5B,GAArB,IAAAc,EAAAe,EAAAC,EAAA,OAAAC,EAAAtE,EAAAuE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACUrB,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAEE,eAAgB,oBAC3BC,KAAMlB,KAAKmB,UAAU,CAAEpB,KAAMA,KAJrCiC,EAAAE,KAAA,EAO2Bd,MAAM,eAAgBP,GAPjD,cAOUe,EAPVI,EAAAG,KAAAH,EAAAE,KAAA,EAQ8BV,EAAeI,GAR7C,cAQUC,EARVG,EAAAG,KASIjC,aAAakC,QAAQ,OAAQpC,KAAKmB,UAAUU,IAThDG,EAAAK,OAAA,SAUWR,GAVX,wBAAAG,EAAAM,SAAAX,wEA0BA,SAAAY,EAAuBjB,GAAvB,IAAAT,EAAAe,EAAA,OAAAE,EAAAtE,EAAAuE,KAAA,SAAAS,GAAA,cAAAA,EAAAP,KAAAO,EAAAN,MAAA,cACUrB,EAAiB,CACnBC,OAAQ,MACRC,QAASjB,KAHjB0C,EAAAN,KAAA,EAM2Bd,MAAK,cAAAC,OAAeC,GAAMT,GANrD,cAMUe,EANVY,EAAAL,KAAAK,EAAAH,OAAA,SAOWb,EAAeI,IAP1B,wBAAAY,EAAAF,SAAAC,wEAUA,SAAAE,EAAwB1C,GAAxB,IAAAc,EAAAe,EAAAc,EAAA,OAAAZ,EAAAtE,EAAAuE,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,cACUrB,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAEE,eAAgB,oBAC3BC,KAAMlB,KAAKmB,UAAU,CAAEpB,KAAMA,KAJrC4C,EAAAT,KAAA,EAO2Bd,MAAK,eAAiBP,GAPjD,OAOUe,EAPVe,EAAAR,KAQUO,EAAMd,EAASgB,OACrBC,QAAQC,IAAIJ,GAThB,wBAAAC,EAAAL,SAAAG,wEAsBA,SAAAM,EAAuBzB,GAAvB,IAAAT,EAAAe,EAAA,OAAAE,EAAAtE,EAAAuE,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,cACUrB,EAAiB,CACnBC,OAAQ,SACRC,QAASjB,KAHjBkD,EAAAd,KAAA,EAM2Bd,MAAK,cAAAC,OAAeC,GAAMT,GANrD,cAMUe,EANVoB,EAAAb,KAAAa,EAAAX,OAAA,SAOWb,EAAeI,IAP1B,wBAAAoB,EAAAV,SAAAS,6BAUA,SAASvB,EAAeI,GACpB,OAAOA,EAASgB,OAAOrB,KAAK,SAAAqB,GACxB,IAAMK,EAAOL,GAAQ5C,KAAKC,MAAM2C,GAChC,IAAKhB,EAASsB,GAAI,CAEd,IAAMtD,EAASqD,GAAQA,EAAKvD,SAAYkC,EAASuB,WACjD,OAAOC,QAAQC,OAAOzD,GAG1B,OAAOqD,gBCvFFK,EAAUC,cCGVC,EAAc,CACvBjD,MAOJ,SAAekD,EAAOC,GAClB,OAAO,SAAAC,GAaP,IAAiB5D,EAZb4D,GAYa5D,EAZI,CAAE0D,SAYS,CAAE9D,KAAMxB,EAAcI,cAAewB,UAVjEO,EAAYC,MAAMkD,EAAOC,GAAUnC,KAAM,SAAAxB,GACrC4D,EAUR,SAAiB5D,GAAQ,MAAO,CAAEJ,KAAMxB,EAAcK,cAAeuB,QAVpDN,CAAQM,IACjBuD,EAAQM,KAAK,eAEjB,SAAAhE,GACI+D,EAOR,SAAiB/D,GAAS,MAAO,CAAED,KAAMxB,EAAcM,cAAemB,SAPrDiE,CAAQjE,EAAMkE,aACvBH,EAASnE,EAAaI,MAAMA,EAAMkE,iBAhB1CtD,OAyBJ,WAEI,OADAF,EAAYE,SACL,CAAEb,KAAMxB,EAAcO,SA1B7BgC,SA4CJ,SAAkBX,GACd,OAAO,SAAA4D,GACHA,EAeJ,SAAiB5D,GAAQ,MAAO,CAAEJ,KAAMxB,EAAcC,iBAAkB2B,QAf3DgE,CAAQhE,IAEjBO,EAAYI,SAASX,GAAMwB,KACvB,SAAAxB,GACI4D,EAYZ,SAAiB5D,GAAQ,MAAO,CAAEJ,KAAMxB,EAAcE,iBAAkB0B,QAZnDN,IACT6D,EAAQM,KAAK,cACbD,EAASnE,EAAaC,QAAQ,iCAElC,SAAAG,GACI+D,EAQZ,SAAiB/D,GAAS,MAAO,CAAED,KAAMxB,EAAcG,iBAAkBsB,SARpDiE,CAAQjE,EAAMkE,aACvBH,EAASnE,EAAaI,MAAMA,EAAMkE,iBAvD9CE,eA4BJ,WACI,OAAO,SAAAL,GACHA,EAQwB,CAAEhE,KAAMxB,EAAcW,qBAN9CwB,EAAYmB,aAAaF,KACrB,SAAAxB,GAAI,OAAI4D,EAMhB,SAAiB5D,GAAQ,MAAO,CAAEJ,KAAMxB,EAAcY,mBAAoBgB,QANjDN,CAAQM,KACzB,SAAAH,GAAK,OAAI+D,EAMjB,SAAiB/D,GAAS,MAAO,CAAED,KAAMxB,EAAca,mBAAoBY,SANjDiE,CAAQjE,EAAMkE,iBAjCxCpC,OAgEJ,SAAiBJ,GACb,OAAO,SAAAqC,GACHA,EASJ,SAAiBrC,GAAM,MAAO,CAAE3B,KAAMxB,EAAcc,eAAgBqC,MATvDyC,CAAQzC,IAEjBhB,EAAYoB,OAAOJ,GACdC,KACG,SAAAxB,GAAI,OAAI4D,EAMpB,SAAiBrC,GAAM,MAAO,CAAE3B,KAAMxB,EAAce,eAAgBoC,MANvC7B,CAAQ6B,KACzB,SAAA1B,GAAK,OAAI+D,EAMrB,SAAiBrC,EAAI1B,GAAS,MAAO,CAAED,KAAMxB,EAAcgB,eAAgBmC,KAAI1B,SANjDiE,CAAQvC,EAAI1B,EAAMkE,sBClE9CG,cACF,SAAAA,EAAYjH,GAAM,IAAAkH,EAAA,OAAAjH,OAAAC,EAAA,EAAAD,CAAAE,KAAA8G,IACdC,EAAAjH,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgH,GAAA3G,KAAAH,QAEKgH,aAAeD,EAAKC,aAAaC,KAAlBnH,OAAAoH,EAAA,EAAApH,QAAAoH,EAAA,EAAApH,CAAAiH,KAHNA,4EAMLI,GACXA,EAAEC,kBAEFZ,EADqBxG,KAAKH,MAAlB2G,UACCH,EAAYhD,2CAGd,IAaHgE,EAAkB,KA+BpB,OA5BAA,EAderH,KAAKH,MAAd+C,KAeJxC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACfP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ+G,SAAO,EAAC9G,MAAM,gBAAgB+G,QAASvH,KAAKgH,cAApD,YAOA5G,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACfP,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAM1G,GAAG,YACTV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACAkH,MApBc,CAChBjH,MAAO,gBACPiF,KAAM,YAiBJ,WAEQrF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASmH,KAAK,kBAGtBtH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAM1G,GAAG,YACTV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACA+G,SAAO,EACP9G,MAAM,iBAFN,WAIQJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASoH,KAAG,EAACD,KAAK,mBAQtBtH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcI,UAAU,oBACtBP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcI,UAAU,MAAxB,sCAGAP,EAAAC,EAAAC,cAAA,KAAGK,UAAU,wBAAwB8G,MAjDxC,CACbjH,MAAO,mBAgDS,wKAGE6G,cArEStG,aAiFpB6G,EAFKC,YAvFpB,SAAyBC,GAGvB,MAAO,CACHlF,KAHuBkF,EAAnBC,eACAnF,OAqFUiF,CAAyBf,WCnD9BkB,cAvCX,SAAAA,EAAYnI,GAAO,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgI,GAAAlI,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkI,GAAA7H,KAAAH,6EAOf,IAAMiI,EAAY,CACdzH,MAAO,WAOL0H,EAAe,CACjBC,aAAc,QAGtB,OACI/H,EAAAC,EAAAC,cAAA,OAAK6D,GAAG,YACR/D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,MAAM,gBAAgB4H,iBAAe,MAAMC,OAAO,OAAOZ,MAV/C,CACjBa,aAAc,SAUlBlI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcK,MAAI,EAACwH,iBAAe,OAC9BhI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYkH,MAAOS,GACf9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYO,GAAG,eAAe2G,MAAOQ,GAArC,SAEJ7H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYkH,MAAOS,GACf9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYO,GAAG,mBAAmB2G,MAAOQ,GAAzC,aAEJ7H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYkH,MAAOS,GACf9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYO,GAAG,uBAAuB2G,MAAOQ,GAA7C,sBA/BMlH,aCHTwH,EAAgB,CACzBC,SAAU,WACVC,YAAa,cACbC,UAAW,YACXC,oBAAqB,sBACrBC,oBAAqB,sBACrBC,oBAAqB,uBCJZC,EAAc,CACvBC,gDACAC,mGAGJ,SAAAxE,EAAmByE,GAAnB,IAAAvF,EAAAe,EAAA,OAAAE,EAAAtE,EAAAuE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACUrB,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAEE,eAAgB,oBAC3BC,KAAMlB,KAAKmB,UAAU,CAAEiF,KAAMA,KAJrCpE,EAAAE,KAAA,EAO2Bd,MAAK,uBAAyBP,GAPzD,cAOUe,EAPVI,EAAAG,KAAAH,EAAAK,OAAA,SAQWb,EAAeI,IAR1B,wBAAAI,EAAAM,SAAAX,wEAWA,SAAAY,EAA0BxC,GAA1B,IAAAc,EAAAe,EAAA,OAAAE,EAAAtE,EAAAuE,KAAA,SAAAS,GAAA,cAAAA,EAAAP,KAAAO,EAAAN,MAAA,cACUrB,EAAiB,CACnBC,OAAQ,MACRC,QAASjB,KAHjB0C,EAAAN,KAAA,EAM2Bd,MAAK,oBAAAC,OAAqBtB,EAAKuB,GAA1B,YAAwCT,GANxE,cAMUe,EANVY,EAAAL,KAAAK,EAAAH,OAAA,SAOWb,EAAeI,IAP1B,wBAAAY,EAAAF,SAAAC,sCAUef,+EAAf,SAAAiB,EAA8Bb,GAA9B,IAAAV,EAAAtB,EAAA,OAAAkC,EAAAtE,EAAAuE,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,cAAAS,EAAAT,KAAA,EACuBN,EAASgB,OADhC,UACU1B,EADVyB,EAAAR,KAEQP,EAASsB,GAFjB,CAAAP,EAAAT,KAAA,eAGctC,EAASsB,GAAQA,EAAKxB,SAAYkC,EAASuB,WAHzDR,EAAAN,OAAA,SAIee,QAAQC,OAAOzD,IAJ9B,cAAA+C,EAAAN,OAAA,SAOWnB,GAPX,wBAAAyB,EAAAL,SAAAG,6BCvBO,IAAM4D,EAAc,CACvBC,QAIJ,SAAiBF,GACb,OAAO,SAAAzC,GACHA,EAYJ,SAAiByC,GAAQ,MAAO,CAAEzG,KAAM+F,EAAcC,SAAUS,QAZnDrC,CAAQ,CAAEqC,UAEnBH,EAAYC,IAAIE,GAAM7E,KAAK,SAAA6E,GACvBzC,EAUR,SAAiByC,GAAQ,MAAO,CAAEzG,KAAM+F,EAAcE,YAAaQ,QAVlD3G,CAAQ2G,IACjB9C,EAAQM,KAAK,iBAEjB,SAAAhE,GACI+D,EAOR,SAAiB/D,GAAS,MAAO,CAAED,KAAM+F,EAAcG,UAAWjG,SAPjDiE,CAAQjE,EAAMkE,aACvBH,EAASnE,EAAaI,MAAMA,EAAMkE,iBAb1CyC,eAsBJ,SAAwBxG,GACpB,OAAO,SAAA4D,GACHA,EAWwB,CAAEhE,KAAM+F,EAAcI,sBAT9CG,EAAYE,WAAWpG,GAAMwB,KAAK,SAAAiF,GAC9B7C,EASR,SAAiB6C,GAAS,MAAO,CAAE7G,KAAM+F,EAAcK,oBAAqBS,SAT3D/G,CAAQ+G,KAErB,SAAA5G,GACI+D,EAOR,SAAiB/D,GAAS,MAAO,CAAED,KAAM+F,EAAcM,oBAAqBpG,SAP3DiE,CAAQjE,EAAMkE,aACvBH,EAASnE,EAAaI,MAAMA,EAAMkE,sBCtBxC2C,cACF,SAAAA,EAAYzJ,GAAM,IAAAkH,EAAA,OAAAjH,OAAAC,EAAA,EAAAD,CAAAE,KAAAsJ,IACdvC,EAAAjH,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwJ,GAAAnJ,KAAAH,KAAMH,KAEDiI,MAAQ,CACTmB,KAAM,CACFM,WAAY,GACZC,UAAW,GACXC,MAAO,IAEXC,WAAW,GAGf3C,EAAK4C,aAAe5C,EAAK4C,aAAa1C,KAAlBnH,OAAAoH,EAAA,EAAApH,QAAAoH,EAAA,EAAApH,CAAAiH,KACpBA,EAAK6C,aAAe7C,EAAK6C,aAAa3C,KAAlBnH,OAAAoH,EAAA,EAAApH,QAAAoH,EAAA,EAAApH,CAAAiH,KAbNA,4EAgBLI,GACTA,EAAEC,iBADS,IAAAyC,EAEa1C,EAAE2C,OAAlBC,EAFGF,EAEHE,KAAMC,EAFHH,EAEGG,MACNf,EAASjJ,KAAK8H,MAAdmB,KACRjJ,KAAKiK,SAAS,CACdhB,KAAKnJ,OAAA+D,EAAA,EAAA/D,CAAA,GACEmJ,EADHnJ,OAAAoK,EAAA,EAAApK,CAAA,GAECiK,EAAOC,2CAKH7C,GACTA,EAAEC,iBADU,IAEJ6B,EAASjJ,KAAK8H,MAAdmB,KAFIkB,EAGenK,KAAKH,MAAxB2G,EAHI2D,EAGJ3D,SAAU5D,EAHNuH,EAGMvH,KACZwH,EAAU,CACZb,WAAYN,EAAKM,WACjBC,UAAWP,EAAKO,UAChBa,UAAWpB,EAAKoB,UAChBC,KAAM,IAAIC,KACVC,OAAQ5H,EAAK6B,SAASN,IAEvBiG,GACC5D,EAAS0C,EAAYC,QAAQiB,qCAKjC,IAAMK,EAAa,CACfC,WAAY,UACZC,OAAQ,WAkBZ,OACIvK,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACfP,EAAAC,EAAAC,cAACsK,EAAD,CAAYnD,MANC,CACba,aAAc,UAMdlI,EAAAC,EAAAC,cAAA,QAAMuK,SAAU7K,KAAK2J,cACrBvJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcI,UAAU,WAEpBP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACAH,EAAAC,EAAAC,cAAA,OAAK6D,GAAG,cACR/D,EAAAC,EAAAC,cAAA,KAAGK,UAAU,WAAb,QAEAP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACfP,EAAAC,EAAAC,cAAA,SAAOwK,QAAQ,SACX1K,EAAAC,EAAAC,cAAA,SACIK,UAAU,mBACV8G,MAAOgD,EACPjI,KAAK,QACL2B,GAAG,QACH6F,MAAM,QACNe,SAAU/K,KAAK4J,aACfG,KAAK,eARb,2CAcA3J,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACfP,EAAAC,EAAAC,cAAA,SAAOwK,QAAQ,OACX1K,EAAAC,EAAAC,cAAA,SACIK,UAAU,mBACV6B,KAAK,QACLiF,MAAOgD,EACPtG,GAAG,MACH6F,MAAM,MACND,KAAK,aACLgB,SAAU/K,KAAK4J,eARvB,2CAcAxJ,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACfP,EAAAC,EAAAC,cAAA,SAAOwK,QAAQ,UACX1K,EAAAC,EAAAC,cAAA,SACIK,UAAU,mBACV6B,KAAK,QACLiF,MAAOgD,EACPtG,GAAG,SACH6F,MAAM,SACND,KAAK,aACLgB,SAAU/K,KAAK4J,eARvB,6CAcAxJ,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACfP,EAAAC,EAAAC,cAAA,SAAOwK,QAAQ,SACX1K,EAAAC,EAAAC,cAAA,SACIK,UAAU,mBACV6B,KAAK,QACL2B,GAAG,QACH6F,MAAM,QACNvC,MAAOgD,EACPV,KAAK,aACLgB,SAAU/K,KAAK4J,eARvB,oCAcAxJ,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACfP,EAAAC,EAAAC,cAAA,SAAOwK,QAAQ,QACX1K,EAAAC,EAAAC,cAAA,SACIK,UAAU,mBACV6B,KAAK,QACL2B,GAAG,OACH6F,MAAM,OACND,KAAK,aACLtC,MAAOgD,EACPM,SAAU/K,KAAK4J,eARvB,qBAcAxJ,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACfP,EAAAC,EAAAC,cAAA,SAAOwK,QAAQ,WACX1K,EAAAC,EAAAC,cAAA,SACIK,UAAU,mBACV6B,KAAK,QACL2B,GAAG,UACH6F,MAAM,UACND,KAAK,aACLtC,MAAOgD,EACPM,SAAU/K,KAAK4J,eARvB,wCAeAxJ,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACfP,EAAAC,EAAAC,cAAA,SAAOwK,QAAQ,SACX1K,EAAAC,EAAAC,cAAA,SACIK,UAAU,mBACV6B,KAAK,QACL2B,GAAG,QACH6F,MAAM,QACND,KAAK,aACLtC,MAAOgD,EACPM,SAAU/K,KAAK4J,eARvB,oDAgBAxJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQyK,QAAM,GACV5K,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACfP,EAAAC,EAAAC,cAAA,KAAGK,UAAU,eAAb,mBACAP,EAAAC,EAAAC,cAAA,QAAMK,UAAU,QAAhB,gBACAP,EAAAC,EAAAC,cAAA,SACIkC,KAAK,QACLuH,KAAK,YACL5F,GAAG,YACH8G,KAAK,YACLxD,MA9IG,CACfiD,WAAY,UACZQ,MAAO,QACPC,UAAW,OACX7C,aAAc,QA2IFyC,SAAU/K,KAAK4J,eAEnBxJ,EAAAC,EAAAC,cAAA,QAAMK,UAAU,QAAhB,kBACAP,EAAAC,EAAAC,cAAA,YAAU6D,GAAG,aACT/D,EAAAC,EAAAC,cAAA,UAAQ0J,MAAM,IAAIoB,MAAM,iBACxBhL,EAAAC,EAAAC,cAAA,UAAQ0J,MAAM,OACd5J,EAAAC,EAAAC,cAAA,UAAQ0J,MAAM,OACd5J,EAAAC,EAAAC,cAAA,UAAQ0J,MAAM,KAAKoB,MAAM,gBACzBhL,EAAAC,EAAAC,cAAA,UAAQ0J,MAAM,OACd5J,EAAAC,EAAAC,cAAA,UAAQ0J,MAAM,OACd5J,EAAAC,EAAAC,cAAA,UAAQ0J,MAAM,KAAKoB,MAAM,WACzBhL,EAAAC,EAAAC,cAAA,UAAQ0J,MAAM,OACd5J,EAAAC,EAAAC,cAAA,UAAQ0J,MAAM,OACd5J,EAAAC,EAAAC,cAAA,UAAQ0J,MAAM,KAAKoB,MAAM,mBACzBhL,EAAAC,EAAAC,cAAA,UAAQ0J,MAAM,UAKtB5J,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,SAAOwK,QAAQ,aAAf,SACA1K,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIiC,KAAK,WACLuH,KAAK,YACLgB,SAAU/K,KAAK4J,aACfzF,GAAG,YACHkH,KAAK,IACLC,KAAK,KACL7D,MApKM,CAClBjH,MAAO,oBAsKHJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ+G,SAAO,EAAC9G,MAAM,gBAAgBgC,KAAK,UAA3C,kBAjOgBzB,aA4OjBwK,EAFC1D,YApPhB,SAAyBC,GAAO,IACpB0D,EAA6B1D,EAA7B0D,SACA5I,EAD6BkF,EAAnBC,eACVnF,KAER,MAAO,CACHqG,KAFauC,EAATvC,KAGJrG,SA8OQiF,CAAyByB,OCzOnCmC,cACF,SAAAA,EAAY5L,GAAM,IAAAkH,EAAA,OAAAjH,OAAAC,EAAA,EAAAD,CAAAE,KAAAyL,IACd1E,EAAAjH,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2L,GAAAtL,KAAAH,QAEK8H,MAAQ,CACThC,KAAM,GACN4F,YAAY,GAGhB3E,EAAK4E,aAAe5E,EAAK4E,aAAa1E,KAAlBnH,OAAAoH,EAAA,EAAApH,QAAAoH,EAAA,EAAApH,CAAAiH,KARNA,oFAcdP,EADqBxG,KAAKH,MAAlB2G,UACCH,EAAYQ,yDAGX,IAAAsD,EACiBnK,KAAKH,MAAxB2G,EADE2D,EACF3D,SAAU5D,EADRuH,EACQvH,KAClB4D,EAAS0C,EAAYE,eAAexG,EAAK6B,WACzCzE,KAAKiK,SAAS,CAAEyB,YAAY,qCAIV1L,KAAKH,MAAfwJ,MACerJ,KAAK8H,MAApB4D,WAWR,OACItL,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACfP,EAAAC,EAAAC,cAACsK,EAAD,CAAYnD,MAVC,CACba,aAAc,UAUdlI,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACfP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ+G,SAAO,EAAC9G,MAAM,gBAAgB+G,QAASvH,KAAK2L,cAApD,iBAGDvL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAckH,MAXM,CACnBH,QAAS,0BAlCcvG,aAwDpB6K,EAFK/D,YAhEpB,SAAyBC,GAAM,IACnB0D,EAA6B1D,EAA7B0D,SACA5I,EAD6BkF,EAAnBC,eACVnF,KAER,MAAO,CACHyG,MAFcmC,EAAVnC,MAGJzG,SA0DYiF,CAAyB4D,GCjEvCI,cACF,SAAAA,EAAYhM,GAAO,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6L,GAAA/L,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+L,GAAA1L,KAAAH,wFAMfA,KAAKH,MAAM2G,SAASH,EAAYQ,mDAG3B,IACGjE,EAAS5C,KAAKH,MAAd+C,KACR,OACIxC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcI,UAAU,oBACxBP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,uCAA+BsC,EAAK6B,SAASsF,KAA7C,cAfiBhJ,aA8BjC,IAEe+K,EAFGjE,YARlB,SAAyBC,GAGrB,MAAO,CACHlF,KAHuBkF,EAAnBC,eACAnF,OAMMiF,CAAyBgE,GCqB5BE,EApDO,WAWpB,OACE3L,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACfP,EAAAC,EAAAC,cAACsK,EAAD,MACAxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcI,UAAU,oBACtBP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcI,UAAU,MAAxB,gBAGAP,EAAAC,EAAAC,cAAA,KAAGK,UAAU,wBAAwB8G,MApBlC,CACXjH,MAAO,mBAmBC,kEAGAJ,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAM1G,GAAG,oBACTV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEkH,MAtBI,CAChBjH,MAAO,gBACPiF,KAAM,YAmBI,YAEWrF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASoH,KAAG,EAACD,KAAK,iBAI7BtH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAM1G,GAAG,wBACTV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+G,SAAO,EACP9G,MAAM,iBAFR,gBAIeJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASmH,KAAK,yBC3BvCsE,cACJ,SAAAA,EAAYnM,GAAM,IAAAkH,EAAA,OAAAjH,OAAAC,EAAA,EAAAD,CAAAE,KAAAgM,IAChBjF,EAAAjH,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkM,GAAA7L,KAAAH,KAAMH,KAGDiI,MAAQ,CACXlF,KAAM,CACJ0D,MAAO,GACPC,SAAU,IAEZ9B,SAAU,GACVwH,UAAU,EACVC,WAAW,GAGbnF,EAAK6C,aAAe7C,EAAK6C,aAAa3C,KAAlBnH,OAAAoH,EAAA,EAAApH,QAAAoH,EAAA,EAAApH,CAAAiH,KACpBA,EAAK4C,aAAe5C,EAAK4C,aAAa1C,KAAlBnH,OAAAoH,EAAA,EAAApH,QAAAoH,EAAA,EAAApH,CAAAiH,KAfJA,4EAkBLI,GACXA,EAAEC,iBADW,IAAAyC,EAEW1C,EAAE2C,OAAlBC,EAFKF,EAELE,KAAMC,EAFDH,EAECG,MACNpH,EAAS5C,KAAK8H,MAAdlF,KACR5C,KAAKiK,SAAS,CACZrH,KAAK9C,OAAA+D,EAAA,EAAA/D,CAAA,GACA8C,EADD9C,OAAAoK,EAAA,EAAApK,CAAA,GAEDiK,EAAOC,2CAKD7C,GACXA,EAAEC,iBACFpH,KAAKiK,SAAS,CAAEiC,WAAW,IAFd,IAGLtJ,EAAS5C,KAAK8H,MAAdlF,KACA4D,EAAaxG,KAAKH,MAAlB2G,SACJ5D,EAAK0D,OAAS1D,EAAK2D,UACrBC,EAASH,EAAYjD,MAAMR,qCAItB,IACCuJ,EAAcnM,KAAKH,MAAnBsM,UADDC,EAEgCpM,KAAK8H,MAApCxB,EAFD8F,EAEC9F,MAAOC,EAFR6F,EAEQ7F,SAAU2F,EAFlBE,EAEkBF,UAEzB,OACE9L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAc4D,GAAG,aACf/D,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ8L,GAAG,KACTjM,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,QAAMuK,SAAU7K,KAAK2J,aAAchJ,UAAU,aAC3CP,EAAAC,EAAAC,cAAA,KAAGK,UAAU,uBAAb,WACAP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACbP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6K,MAAM,OACNzK,UAAU,eACV2L,OAAK,EACL9J,KAAK,OACL+J,UAAQ,EACR9J,MAAM,QACNH,QAAQ,QACRyH,KAAK,OACLgB,SAAU/K,KAAK4J,gBAGnBxJ,EAAAC,EAAAC,cAAA,OAAKK,UAAW,cAAgBuL,IAAc5F,EAAQ,aAAe,KACnElG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6K,MAAM,QACNkB,OAAK,EACL9J,KAAK,QACL+J,UAAQ,EACR9J,MAAM,QACNH,QAAQ,QACRyH,KAAK,QACLgB,SAAU/K,KAAK4J,gBAGnBxJ,EAAAC,EAAAC,cAAA,OAAKK,UAAW,cAAgBuL,IAAc3F,EAAW,aAAe,KACtEnG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6K,MAAM,gBACNkB,OAAK,EACL9J,KAAK,WACL+J,UAAQ,EACRxC,KAAK,WACLgB,SAAU/K,KAAK4J,gBAGnBxJ,EAAAC,EAAAC,cAAA,OAAKK,UAAU,yBACbP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,gBAAgBgC,KAAK,UAAnC,WAGE2J,EACF/L,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAM1G,GAAG,WAAWH,UAAU,gBAA9B,yBA7FUI,aAgH9B,IAEeyL,EAFI3E,YAPnB,SAAyBC,GAEvB,MAAO,CACLqE,UAFoBrE,EAAMC,eAApBoE,YAMStE,CAAyBmE,OCzGtCS,eACJ,SAAAA,EAAY5M,GAAM,IAAAkH,EAAA,OAAAjH,OAAAC,EAAA,EAAAD,CAAAE,KAAAyM,IAChB1F,EAAAjH,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2M,GAAAtM,KAAAH,KAAMH,KAEDiI,MAAQ,CACXlF,KAAM,CACJ0D,MAAO,GACPyD,KAAM,GACNxD,SAAU,GACVmG,qBAAsB,IAExBT,UAAU,EACVC,WAAW,GAGbnF,EAAK6C,aAAe7C,EAAK6C,aAAa3C,KAAlBnH,OAAAoH,EAAA,EAAApH,QAAAoH,EAAA,EAAApH,CAAAiH,KACpBA,EAAK4C,aAAe5C,EAAK4C,aAAa1C,KAAlBnH,OAAAoH,EAAA,EAAApH,QAAAoH,EAAA,EAAApH,CAAAiH,KAfJA,4EAmBLI,GACXA,EAAEC,iBADW,IAAAyC,EAEW1C,EAAE2C,OAAlBC,EAFKF,EAELE,KAAMC,EAFDH,EAECG,MACNpH,EAAS5C,KAAK8H,MAAdlF,KACR5C,KAAKiK,SAAS,CACZrH,KAAK9C,OAAA+D,EAAA,EAAA/D,CAAA,GACA8C,EADD9C,OAAAoK,EAAA,EAAApK,CAAA,GAEDiK,EAAOC,2CAKD7C,GACXA,EAAEC,iBACFpH,KAAKiK,SAAS,CAAEiC,WAAW,IAFd,IAGLtJ,EAAS5C,KAAK8H,MAAdlF,KACA4D,EAAaxG,KAAKH,MAAlB2G,SACL5D,EAAK0D,OAAS1D,EAAK2D,UAAY3D,EAAKmH,MACrCvD,EAASH,EAAY9C,SAASX,qCAIzB,IAAAwJ,EAEqBpM,KAAK8H,MAAzBlF,EAFDwJ,EAECxJ,KAAMsJ,EAFPE,EAEOF,UAEd,OACE9L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAc4D,GAAG,aACf/D,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ8L,GAAG,KACTjM,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACAH,EAAAC,EAAAC,cAAA,QAAMK,UAAU,aAAakK,SAAU7K,KAAK2J,cACxCvJ,EAAAC,EAAAC,cAAA,KAAGK,UAAU,uBAAb,WACAP,EAAAC,EAAAC,cAAA,OAAKK,UAAW,cAAgBuL,IAActJ,EAAKmH,KAAO,aAAe,KACvE3J,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6K,MAAM,YACNkB,OAAK,EACL9J,KAAK,OACL+J,UAAQ,EACR9J,MAAM,QACNH,QAAQ,QACRyH,KAAK,OACLpJ,UAAU,eACVoK,SAAU/K,KAAK4J,gBAGnBxJ,EAAAC,EAAAC,cAAA,OAAKK,UAAW,cAAgBuL,IAActJ,EAAK0D,MAAQ,aAAe,KACxElG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6K,MAAM,aACNkB,OAAK,EACL9J,KAAK,QACL+J,UAAQ,EACR9J,MAAM,QACNH,QAAQ,QACRyH,KAAK,QACLpJ,UAAU,eACVoK,SAAU/K,KAAK4J,gBAGnBxJ,EAAAC,EAAAC,cAAA,OAAKK,UAAW,cAAgBuL,IAActJ,EAAK2D,SAAW,aAAe,KAC3EnG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6K,MAAM,WACNkB,OAAK,EACL9J,KAAK,WACL+J,UAAQ,EACRxC,KAAK,WACLpJ,UAAU,eACVoK,SAAU/K,KAAK4J,gBAGnBxJ,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACZP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACC6K,MAAM,wBACNkB,OAAK,EACL9J,KAAK,WACL+J,UAAQ,EACR9J,MAAM,QACNH,QAAQ,QACRyH,KAAK,uBACLgB,SAAU/K,KAAK4J,gBAGnBxJ,EAAAC,EAAAC,cAAA,OAAKK,UAAU,yBACbP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,gBAAgBgC,KAAK,UAAnC,WAGApC,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAM1G,GAAG,WAAWH,UAAU,gBAA9B,yCA3GUI,aAyHjB4L,GAFI9E,YA9HnB,SAAyBC,GACvB,MAAO,CACL8E,aAAc9E,EAAM8E,eA4HL/E,CAAyB4E,iCChItCI,eACF,SAAAA,EAAYhN,GAAM,IAAAkH,EAAAjH,OAAAC,EAAA,EAAAD,CAAAE,KAAA6M,GAAA,IAGNrG,GAFRO,EAAAjH,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+M,GAAA1M,KAAAH,KAAMH,KAEoBA,MAAlB2G,SAHM,OAIdL,EAAQ2G,OAAO,SAACC,EAAUC,GACtBxG,EAASnE,EAAaK,WALZqE,wEAYd,OACI3G,EAAAC,EAAAC,cAAA,WACK2M,MAAM1K,SAAWnC,EAAAC,EAAAC,cAAA,OAAKK,UAAS,SAAAuD,OAAW+I,MAAMzK,OAASyK,MAAM1K,SACpEnC,EAAAC,EAAAC,cAAC4M,GAAA,EAAD,CAAQ/G,QAASA,GACjB/F,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACfP,EAAAC,EAAAC,cAAC6M,EAAD,MACA/M,EAAAC,EAAAC,cAAA,QAAMK,UAAU,WACZP,EAAAC,EAAAC,cAAC8M,GAAA,EAAD,KACIhN,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjCrN,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,UAAW1B,IAC1C1L,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWzB,IAC5C3L,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CAAOK,QAAM,EAACH,KAAK,WAAWC,UAAWhB,IACzCpM,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAWb,KACxCvM,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CAAOE,KAAK,mBAAmBC,UAAWjC,IAC1CnL,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CAAOE,KAAK,uBAAuBC,UAAW5B,gBA3BvC7K,aA4C3B,IAEe4M,GAFH9F,YAPZ,SAAyBC,GAErB,MAAO,CACHmF,MAFcnF,EAAVmF,QAMApF,CAAyBgF,aCxDrC,IAAIjK,GAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAErC4K,GAAehL,GAAO,CAAEqJ,UAAU,EAAMrJ,SAAS,GCCvD,IAMeiL,GANKC,aAAgB,CAChCb,MCJG,WAAkC,IAAnBnF,EAAmBiG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAX,GAAIf,EAAOe,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrC,OAAQjB,EAAOxK,MACX,KAAKP,EAAeC,QAChB,MAAO,CACHM,KAAM,gBACND,QAASyK,EAAOzK,SAExB,KAAKN,EAAeE,MAChB,MAAO,CACHK,KAAM,eACND,QAASyK,EAAOzK,SAExB,KAAKN,EAAeG,MAChB,MAAO,GACX,QACI,OAAO0F,IDVfC,eDDG,WAAqD,IAA7BD,EAA6BiG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArBH,GAAcZ,EAAOe,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxD,OAAOjB,EAAOxK,MACV,KAAKxB,EAAcI,cACf,MAAO,CACL+K,WAAW,EACXvJ,KAAMoK,EAAOpK,MAEnB,KAAK5B,EAAcK,cACf,MAAO,CACL4K,UAAU,EACVrJ,KAAMoK,EAAOpK,MAEnB,KAAK5B,EAAcM,cAEnB,KAAKN,EAAcO,OACf,MAAO,GACX,QACI,OAAOuG,ICff0D,SENG,WAAqC,IAAnB1D,EAAmBiG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAX,GAAIf,EAAOe,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxC,OAAOjB,EAAOxK,MACV,KAAK+F,EAAcC,SACf,MAAO,CACH0F,YAAY,EACZjF,KAAM+D,EAAO/D,MAErB,KAAKV,EAAcE,YACf,MAAO,CACH0F,WAAW,EACXlF,KAAM+D,EAAO/D,MAErB,KAAKV,EAAcG,UACf,MAAO,GACX,KAAKH,EAAcI,oBACf,MAAO,CACHyF,SAAS,GAEjB,KAAK7F,EAAcK,oBACf,MAAO,CACHyF,MAAOrB,EAAO3D,OAEtB,KAAKd,EAAcM,oBACf,MAAO,CACHpG,MAAOuK,EAAOvK,OAEtB,QACI,OAAOqF,wBCxBbwG,GAAmBC,0BAUVC,GARDC,aACVZ,GACAa,aACIC,KACAL,0BCDRM,IAASC,OACTzO,EAAAC,EAAAC,cAACwO,EAAA,EAAD,CAAUN,MAAOA,IAChBpO,EAAAC,EAAAC,cAACyO,GAAD,OAEEC,SAASC,eAAe","file":"static/js/main.20934d17.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink } from \"mdbreact\";\n\nclass NavBar extends Component {\n    constructor(props){\n        super();\n\n    }\n\n    render() {\n        return (\n            <MDBNavbar color=\"teal lighten-3\" dark expand=\"md\">\n            <MDBNavbarBrand>\n                <strong className=\"black-text\">Pocket Therabuddy</strong>\n            </MDBNavbarBrand>\n            \n            <MDBNavbarNav left>\n            <MDBNavItem active>\n              <MDBNavLink to=\"/\" className=\"black-text\">Home</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem active>\n              <MDBNavLink to=\"/dashboard\" className=\"black-text\">Dashboard</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem>\n              <MDBNavLink to=\"/moodtracker\" className=\"black-text\">MoodTracker</MDBNavLink>\n            </MDBNavItem>\n            </MDBNavbarNav>\n            </MDBNavbar>\n        )\n    }\n\n};\n\nexport default NavBar;","export const userConstants = {\n    REGISTER_REQUEST: 'USERS_REGISTER_REQUEST',\n    REGISTER_SUCCESS: 'USERS_REGISTER_SUCCESS',\n    REGISTER_FAILURE: 'USERS_REGISTER_FAILURE',\n\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\n\n    LOGOUT: 'USERS_LOGOUT',\n\n    GETALL_REQUEST: 'USERS_GETALL_REQUEST',\n    GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\n    GETALL_FAILURE: 'USERS_GETALL_FAILURE',\n\n    GETCURRENT_REQUEST: 'USERS_GETCURRENT_REQUEST',\n    GETCURRENT_SUCCESS: 'USERS_GETCURRENT_SUCCESS',\n    GETCURRENT_FAILURE: 'USERS_GETCURRENT_FAILURE',\n\n    DELETE_REQUEST: 'USERS_DELETE_REQUEST',\n    DELETE_SUCCESS: 'USERS_DELETE_SUCCESS',\n    DELETE_FAILURE: 'USERS_DELETE_FAILURE'    \n};\n","export const alertConstants = {\n    SUCCESS: 'ALERT_SUCCESS',\n    ERROR: 'ALERT_ERROR',\n    CLEAR: 'ALERT_CLEAR'\n};\n\n","import { alertConstants } from '../constants/alertCon';\n\nexport const alertActions = {\n    success,\n    error,\n    clear\n};\n\nfunction success(message){\n    return { type: alertConstants.SUCCESS, message };\n}\n\nfunction error(message){\n    return { type: alertConstants.ERROR, message };\n}\n\nfunction clear() {\n    return { type: alertConstants.CLEAR };\n}","export function authHeader() {\n    let user = JSON.parse(localStorage.getItem('user'));\n\n    if (user && user.token) {\n        return { 'Authorization': 'Bearer ' + user.token };\n    } else {\n        return {};\n    }\n}","import { authHeader } from '../helpers/authHeader';\n\nexport const userService = {\n    login,\n    logout,\n    register,\n    getById,\n    update,\n    getCurrent,\n    delete: _delete\n};\n\nasync function login(user) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ user: user })\n    };\n\n    const response = await fetch('/api/sign_in', requestOptions);\n    const currentUser = await handleResponse(response);\n    localStorage.setItem('user', JSON.stringify(currentUser));\n    return currentUser;\n}\n\nfunction logout() {\n    localStorage.removeItem('user');\n}\n\nfunction getCurrent() {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n\n    return fetch(`/api/user`, requestOptions).then(handleResponse);\n}\n\nasync function getById(id) {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n\n    const response = await fetch(`/api/users/${id}`, requestOptions);\n    return handleResponse(response);\n}\n\nasync function register(user) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ user: user })\n    };\n\n    const response = await fetch(`/api/sign_up`, requestOptions);\n    const res = response.text();\n    console.log(res);\n}\n\nfunction update(user) {\n    const requestOptions = {\n        method: 'PUT',\n        headers: { ...authHeader(), 'Content-Type': 'application/json' },\n        body: JSON.stringify(user)\n    };\n\n    return fetch(`/api/users/${user.id}`, requestOptions).then(handleResponse);;\n}\n\nasync function _delete(id) {\n    const requestOptions = {\n        method: 'DELETE',\n        headers: authHeader()\n    };\n\n    const response = await fetch(`/api/users/${id}`, requestOptions);\n    return handleResponse(response);\n}\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","import { userConstants } from '../constants/userConstants';\nimport { alertActions } from './alertActions';\nimport { userService } from '../services/userService';\nimport { history } from '../helpers/history';\n\nexport const userActions = {\n    login,\n    logout,\n    register,\n    getCurrentUser,\n    delete: _delete\n};\n\nfunction login(email, password){\n    return dispatch => {\n        dispatch(request({ email }));\n\n        userService.login(email, password).then( user => {\n            dispatch(success(user));\n            history.push('/dashboard');\n        },\n        error => {\n            dispatch(failure(error.toString()));\n            dispatch(alertActions.error(error.toString()));\n        });\n    };\n\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user }};\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user }};\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error }};\n}\n\nfunction logout() {\n    userService.logout();\n    return { type: userConstants.LOGOUT };\n}\n\nfunction getCurrentUser() {\n    return dispatch => {\n        dispatch(request());\n\n        userService.getCurrent().then(\n            user => dispatch(success(user)),\n            error => dispatch(failure(error.toString()))\n        );\n    };\n\n    function request() { return { type: userConstants.GETCURRENT_REQUEST }};\n    function success(user) { return { type: userConstants.GETCURRENT_SUCCESS, user }};\n    function failure(error) { return { type: userConstants.GETCURRENT_FAILURE, error }};\n}\n\nfunction register(user) {\n    return dispatch => {\n        dispatch(request(user));\n\n        userService.register(user).then(\n            user => {\n                dispatch(success());\n                history.push('/dashboard');\n                dispatch(alertActions.success('Account creation successful'));\n            }, \n            error => {\n                dispatch(failure(error.toString()));\n                dispatch(alertActions.error(error.toString()));\n            }\n        );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user }};\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user }};\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error }};\n}\n\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        userService.delete(id)\n            .then(\n                user => dispatch(success(id)),\n                error => dispatch(failure(id, error.toString()))\n            );\n    };\n\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n}","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { userActions } from '../actions/userActions';\nimport { MDBJumbotron, MDBBtn, MDBContainer, MDBRow, MDBCol, MDBIcon, MDBCardBody, MDBCardTitle } from \"mdbreact\";\n\n\nfunction mapStateToProps(state) {\n  const { authentication } = state;\n  const { user } = authentication;\n  return {\n      user\n  };\n}\n\nclass ConnectedLandingPage extends Component {\n    constructor(props){\n        super();\n\n        this.handleLogOut = this.handleLogOut.bind(this);\n    }\n\n    handleLogOut(e){\n      e.preventDefault();\n      const { dispatch } = this.props;\n      dispatch(userActions.logout());\n    }\n\n    render() {\n\n      const { user } = this.props\n\n      const pStyle = {\n        color: 'teal lighten-3'\n    } \n    \n    const buttonStyle = {\n        color: 'red lighten-3',\n        text: '#b71c1c'\n    }\n\n      let buttonComponent = null;\n\n      if(user){\n        buttonComponent = (\n          <div className=\"pt-2\">\n          <MDBBtn outline color=\"red lighten-3\" onClick={this.handleLogOut}>\n          Log Out\n          </MDBBtn>\n          </div>\n        )\n      } else {\n        buttonComponent = (\n          <div className=\"pt-2\">\n          <Link to=\"/sign_up\">\n          <MDBBtn\n          style={buttonStyle}>\n          Sign Up <MDBIcon icon=\"user-circle\" />\n          </MDBBtn>\n          </Link>\n          <Link to=\"/sign_in\">\n          <MDBBtn\n          outline\n          color=\"red lighten-3\"\n          >\n          Sign In <MDBIcon far icon=\"user-circle\" />\n          </MDBBtn>\n          </Link>\n          </div>\n        ) \n      }\n\n        return (\n              <MDBContainer className=\"mt-5 text-center\">\n                <MDBRow>\n                  <MDBCol>\n                    <MDBJumbotron>\n                      <MDBCardBody>\n                        <MDBCardTitle className=\"h2\">\n                          Welcome to Your Pocket Thera-buddy\n                        </MDBCardTitle>\n                        <p className=\"my-4 font-weight-bold\" style={pStyle}>\n                        I'm here to help you keep track of your moods and daily habits, remind you of your favorite coping resources, and give you a spot to reframe your negative thoguhts.\n                        </p>\n                        { buttonComponent }\n                      </MDBCardBody>\n                    </MDBJumbotron>\n                  </MDBCol>\n                </MDBRow>\n              </MDBContainer>\n        )\n    }\n}\n\nconst LandingPage = connect(mapStateToProps)(ConnectedLandingPage);\n\nexport default LandingPage;\n\n\n","import React, {Component} from 'react';\nimport { MDBNavbar, MDBNavbarNav, MDBNavItem, MDBNavLink } from \"mdbreact\";\n\nclass MoodNav extends Component {\n    constructor(props){\n        super();\n\n\n    }\n\n    render() {\n        const textStyle = {\n            color: \"#b71c1c\"\n        }\n    \n        const paddingStyle = {\n            marginBottom: '35px'\n        }\n\n        const navItemStyle = {\n            paddingRight: '15px'\n        }\n\n    return (\n        <div id=\"mood-nav\">\n        <MDBNavbar color=\"red lighten-4\" flex-direction=\"row\" margin=\"35px\" style={paddingStyle}>\n        <MDBNavbarNav left flex-direction=\"row\">\n            <MDBNavItem style={navItemStyle}>\n                <MDBNavLink to=\"/moodtracker\" style={textStyle}>Main</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem style={navItemStyle}>\n                <MDBNavLink to=\"/moodtracker/add\" style={textStyle}>Add Mood</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem style={navItemStyle}>\n                <MDBNavLink to=\"/moodtracker/history\" style={textStyle}>History</MDBNavLink>\n            </MDBNavItem>\n        </MDBNavbarNav>\n        </MDBNavbar>\n        </div>\n    );\n    }\n};\n\nexport default MoodNav;","export const moodConstants = {\n    ADD_MOOD: \"ADD_MOOD\",\n    ADD_SUCCESS: \"ADD_SUCCESS\",\n    ADD_ERROR: \"ADD_ERROR\",\n    MOODHISTORY_REQUEST: 'MOODHISTORY_REQUEST',\n    MOODHISTORY_SUCCESS: 'MOODHISTORY_SUCCESS',\n    MOODHISTORY_FAILURE: 'MOODHISTORY_FAILURE'\n}","import { authHeader } from '../helpers/authHeader';\n\nexport const moodService = {\n    add,\n    getHistory\n}\n\nasync function add(mood) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ mood: mood })\n    };\n\n    const response = await fetch(`/api/moodtracker/add`, requestOptions);\n    return handleResponse(response);\n}\n\nasync function getHistory(user) {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n\n    const response = await fetch(`/api/moodtracker/${user.id}/history`, requestOptions);\n    return handleResponse(response);\n}\n\nasync function handleResponse(response) {\n    const body = await response.text();\n    if(!response.ok){\n        const error = (body && body.message) || response.statusText;\n        return Promise.reject(error);\n    }\n\n    return body;\n}\n\n","import { moodConstants } from '../constants/moodConstants';\nimport { alertActions } from './alertActions';\nimport { history } from '../helpers/history';\nimport { moodService } from '../services/moodService';\n\nexport const moodActions = {\n    addMood,\n    getMoodHistory\n}\n\nfunction addMood(mood){\n    return dispatch => {\n        dispatch(request({ mood }));\n\n        moodService.add(mood).then(mood => {\n            dispatch(success(mood));\n            history.push('/moodtracker');\n        },\n        error => {\n            dispatch(failure(error.toString()));\n            dispatch(alertActions.error(error.toString()));\n        });\n    };\n\n    function request(mood) { return { type: moodConstants.ADD_MOOD, mood }};\n    function success(mood) { return { type: moodConstants.ADD_SUCCESS, mood }};\n    function failure(error) { return { type: moodConstants.ADD_ERROR, error }};\n}\n\nfunction getMoodHistory(user){\n    return dispatch => {\n        dispatch(request());\n\n        moodService.getHistory(user).then(moods => {\n            dispatch(success(moods));\n        }, \n        error => {\n            dispatch(failure(error.toString()));\n            dispatch(alertActions.error(error.toString()));\n        });\n    };\n\n    function request() { return { type: moodConstants.MOODHISTORY_REQUEST }};\n    function success(moods) { return { type: moodConstants.MOODHISTORY_SUCCESS, moods }};\n    function failure(error) { return { type: moodConstants.MOODHISTORY_FAILURE, error }};\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { MDBInput, MDBContainer, MDBRow, MDBBtn } from \"mdbreact\";\nimport HistoryNav from '../partials/HistoryNav';\nimport { moodActions } from '../../actions/moodActions';\n\nfunction mapStateToProps(state) {\n    const { saveMood, authentication } = state;\n    const { user } = authentication;\n    const { mood } = saveMood;\n    return {\n        mood,\n        user\n    };\n}\n\nclass ConnectedMoodForm extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            mood: {\n                moodselect: '',\n                moodlevel: '',\n                notes: '',\n            },\n            isChecked: false\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    \n    handleChange(e){\n        e.preventDefault();\n        const { name, value } = e.target;\n        const { mood } = this.state;\n        this.setState({ \n        mood: {\n            ...mood,\n            [name]: value\n        }\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const { mood } = this.state;\n        const { dispatch, user } = this.props;\n        const newMood = {\n            moodselect: mood.moodselect,\n            moodlevel: mood.moodlevel,\n            moodnotes: mood.moodnotes,\n            date: new Date(),\n            userId: user.response.id\n        }\n        if(newMood){\n            dispatch(moodActions.addMood(newMood));\n        }\n    }\n\n    render() {\n        const radioStyle = {\n            background: \"#80CBC4\",\n            border: \"#80CBC4\"\n        }\n    \n        const rangeStyle = {\n            background: \"#80CBC4\",\n            width: \"500px\",\n            marginTop: \"15px\",\n            marginBottom: \"35px\"\n        }\n    \n        const textareaStyle = {\n            color: 'red lighten-3'\n        }\n\n        const navStyle = {\n            marginBottom: '35px'\n        }\n\n        return (\n            <div className=\"content\">\n            <HistoryNav style={navStyle}/>\n            <form onSubmit={this.handleSubmit}>\n            <MDBContainer className=\"addMood\">\n                \n                <MDBRow>\n                <div id=\"moodselect\">\n                <p className=\"h5 mb-4\">Mood</p>\n\n                <div className=\"form-check\">\n                <label htmlFor=\"happy\">\n                    <input \n                        className=\"form-check-input\" \n                        style={radioStyle} \n                        type=\"radio\" \n                        id=\"happy\" \n                        value=\"happy\" \n                        onChange={this.handleChange}\n                        name=\"moodselect\" \n                        />\n                    Happy, Joyful, Relaxed, Silly, Content\n                    </label>\n                </div>\n\n                <div className=\"form-check\">\n                <label htmlFor=\"sad\">\n                    <input \n                        className=\"form-check-input\" \n                        type=\"radio\" \n                        style={radioStyle} \n                        id=\"sad\" \n                        value=\"sad\" \n                        name=\"moodselect\" \n                        onChange={this.handleChange} \n                        />\n                        Sad, Lonely, Depressed, Insecure, Numb\n                        </label>\n                </div>\n\n                <div className=\"form-check\">\n                <label htmlFor=\"active\">\n                    <input \n                        className=\"form-check-input\" \n                        type=\"radio\" \n                        style={radioStyle} \n                        id=\"active\" \n                        value=\"active\"\n                        name=\"moodselect\"  \n                        onChange={this.handleChange} \n                        />\n                    Energetic, Motivated, Active, Productive\n                    </label>\n                </div>\n\n                <div className=\"form-check\">\n                <label htmlFor=\"tired\">\n                    <input \n                        className=\"form-check-input\" \n                        type=\"radio\" \n                        id=\"tired\" \n                        value=\"tired\" \n                        style={radioStyle} \n                        name=\"moodselect\" \n                        onChange={this.handleChange} \n                        />\n                    Tired, Sick, Unmotivated, Bored\n                    </label>\n                </div>\n\n                <div className=\"form-check\">\n                <label htmlFor=\"fine\">\n                    <input \n                        className=\"form-check-input\" \n                        type=\"radio\" \n                        id=\"fine\" \n                        value=\"fine\" \n                        name=\"moodselect\" \n                        style={radioStyle} \n                        onChange={this.handleChange} \n                        />\n                    Uneventful, Fine\n                    </label>\n                </div>\n\n                <div className=\"form-check\">\n                <label htmlFor=\"anxious\">\n                    <input \n                        className=\"form-check-input\" \n                        type=\"radio\" \n                        id=\"anxious\" \n                        value=\"anxious\"\n                        name=\"moodselect\"  \n                        style={radioStyle} \n                        onChange={this.handleChange} \n                        />\n                    Anxious, Worried, Nervous, Restless\n                    </label>\n                </div>\n\n\n                <div className=\"form-check\">\n                <label htmlFor=\"angry\">\n                    <input \n                        className=\"form-check-input\" \n                        type=\"radio\" \n                        id=\"angry\" \n                        value=\"angry\" \n                        name=\"moodselect\" \n                        style={radioStyle} \n                        onChange={this.handleChange}  \n                        />\n                    Angry, Frustrated, Annoyed, Grumpy, Irritated\n                    </label>\n                </div>\n                </div>\n                </MDBRow>\n\n                <MDBRow center>\n                    <div className=\"my-5\">\n                    <p className=\"text-center\">Intensity Level</p>\n                    <span className=\"mr-2\">Barely There</span>\n                    <input \n                        type=\"range\"\n                        name=\"moodlevel\"\n                        id=\"moodlevel\"\n                        list=\"tickmarks\"\n                        style={rangeStyle}\n                        onChange={this.handleChange}\n                        />\n                    <span className=\"ml-2\">Off the Charts</span>\n                    <datalist id=\"tickmarks\">\n                        <option value='5' label=\"Barely There\" />\n                        <option value='10' />\n                        <option value='15' />\n                        <option value='20' label=\"Significant\" />\n                        <option value='25' />\n                        <option value='30' />\n                        <option value='35' label=\"Strong\" />\n                        <option value='40' />\n                        <option value='45' />\n                        <option value='50' label=\"Off the Charts\" />\n                        <option value='55' />\n                    </datalist>\n                    </div>\n                </MDBRow>\n\n                <MDBRow>\n                    <label htmlFor=\"moodnotes\">Notes</label>\n                    <MDBInput \n                        type=\"textarea\" \n                        name=\"moodnotes\" \n                        onChange={this.handleChange} \n                        id=\"moodnotes\" \n                        rows=\"3\" \n                        cols=\"45\" \n                        style={textareaStyle}/>\n                </MDBRow>\n\n                <MDBBtn outline color=\"red lighten-3\" type=\"submit\">Save</MDBBtn>\n\n            </MDBContainer>\n            </form>\n            </div>\n        )\n    }\n}\n\nconst AddMood = connect(mapStateToProps)(ConnectedMoodForm);\n\nexport default AddMood;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport HistoryNav from '../partials/HistoryNav';\nimport { moodActions } from '../../actions/moodActions';\nimport { userActions } from '../../actions/userActions';\nimport { MDBBtn, MDBContainer, MDBRow } from 'mdbreact';\n\nfunction mapStateToProps(state){\n    const { saveMood, authentication } = state;\n    const { user } = authentication;\n    const { moods } = saveMood; \n    return {\n        moods,\n        user\n    }\n}\n\nclass ConnectedMoodHistory extends Component {\n    constructor(props){\n        super();\n\n        this.state = {\n            data: {},\n            dataLoaded: false,\n        }\n\n        this.fetchHistory = this.fetchHistory.bind(this);\n        \n    }\n\n    componentDidMount() {\n        const { dispatch } = this.props;\n        dispatch(userActions.getCurrentUser());\n    }\n\n    fetchHistory(){\n        const { dispatch, user } = this.props;\n        dispatch(moodActions.getMoodHistory(user.response));\n        this.setState({ dataLoaded: true });\n    }\n\n    render() {\n        const { moods } = this.props;\n        const { dataLoaded } = this.state;\n\n\n        const navStyle = {\n            marginBottom: '35px'\n        }\n\n        const containerStyle = {\n            outline: 'dashed, 1px'\n        }\n\n        return (\n            <div className=\"content\">\n            <HistoryNav style={navStyle} />\n            <div className=\"container\">\n            <MDBBtn outline color='red lighten-3' onClick={this.fetchHistory}>\n            Fetch History\n            </MDBBtn>\n           <MDBContainer style={containerStyle}>\n            \n            </MDBContainer>\n            </div>\n            </div>\n        )\n    }\n\n}\n\nconst MoodHistory = connect(mapStateToProps)(ConnectedMoodHistory);\n\nexport default MoodHistory;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { MDBContainer, MDBRow } from 'mdbreact';\nimport { userActions } from '../actions/userActions';\n\n\nclass ConnectedDashboard extends Component {\n    constructor(props){\n        super();\n        \n    }\n\n    componentDidMount() {\n        this.props.dispatch(userActions.getCurrentUser());\n    }\n\n    render() {\n        const { user } = this.props;\n        return (\n            <MDBContainer className=\"mt-5 text-center\">\n            <MDBRow>\n                <h1>Welcome to your dashboard {user.response.name} </h1>\n            </MDBRow>\n            </MDBContainer>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { authentication } = state;\n    const { user } = authentication;\n    return {\n        user\n    };\n}\n\nconst Dashboard = connect(mapStateToProps)(ConnectedDashboard);\n\nexport default Dashboard;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport HistoryNav from '../partials/HistoryNav';\nimport { MDBJumbotron, MDBBtn, MDBContainer, MDBRow, MDBCol, MDBIcon, MDBCardBody, MDBCardTitle } from \"mdbreact\";\n\nconst MoodJumbotron = () => {\n\n  const pStyle = {\n      color: 'teal lighten-3'\n  } \n  \n  const buttonStyle = {\n      color: 'red lighten-3',\n      text: '#b71c1c'\n  }\n\n  return (\n    <div className=\"content\">\n    <HistoryNav />\n    <MDBContainer className=\"mt-5 text-center\">\n      <MDBRow>\n        <MDBCol>\n          <MDBJumbotron>\n            <MDBCardBody>\n              <MDBCardTitle className=\"h2\">\n                Mood Tracker\n              </MDBCardTitle>\n              <p className=\"my-4 font-weight-bold\" style={pStyle}>\n                Track your daily moods and view your history to find patterns.\n              </p>\n              <div className=\"pt-2\">\n                <Link to=\"/moodtracker/add\">\n                <MDBBtn\n                  style={buttonStyle}>\n                  Add Mood <MDBIcon far icon=\"smile-beam\" />\n                </MDBBtn>\n                </Link>\n\n                <Link to=\"/moodtracker/history\">\n                <MDBBtn\n                  outline\n                  color=\"red lighten-3\"\n                >\n                  View History <MDBIcon icon=\"chart-line\" />\n                </MDBBtn>\n                </Link>\n\n              </div>\n            </MDBCardBody>\n          </MDBJumbotron>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n    </div>\n  )\n}\n\nexport default MoodJumbotron;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {Link} from \"react-router-dom\";\nimport { userActions } from '../../actions/userActions';\n\nimport {\n    MDBContainer,\n    MDBRow,\n    MDBCol,\n    MDBCard,\n    MDBCardBody,\n    MDBBtn,\n    MDBInput\n} from \"mdbreact\";\n\n\nclass ConnectedSignIn extends Component {\n  constructor(props){\n    super(props);\n\n\n    this.state = {\n      user: {\n        email: '',\n        password: ''\n      },\n      response: '',\n      loggedIn: false,\n      submitted: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e){\n    e.preventDefault();\n    const { name, value } = e.target;\n    const { user } = this.state;\n    this.setState({ \n      user: {\n        ...user,\n        [name]: value\n      }\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n    this.setState({ submitted: true });\n    const { user } = this.state;\n    const { dispatch } = this.props;\n    if( user.email && user.password ) {\n      dispatch(userActions.login(user))\n    } \n  }\n\n  render() {\n    const { loggingIn } = this.props;\n    const { email, password, submitted } = this.state;\n\n    return (\n      <MDBContainer id=\"user-form\">\n        <MDBRow>\n          <MDBCol md=\"6\">\n            <MDBCard>\n              <MDBCardBody>\n                <form onSubmit={this.handleSubmit} className=\"grey-text\">\n                  <p className=\"h4 text-center py-4\">Sign In</p>\n                  <div className='form-group'>\n                    <MDBInput\n                      label=\"name\"\n                      className=\"form-control\"\n                      group\n                      type=\"text\"\n                      validate\n                      error=\"wrong\"\n                      success=\"right\"\n                      name=\"name\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <div className={\"form-group\" + (submitted && !email ? ' has-error' : '')}>\n                    <MDBInput\n                      label=\"email\"\n                      group\n                      type=\"email\"\n                      validate\n                      error=\"wrong\"\n                      success=\"right\"\n                      name=\"email\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <div className={\"form-group\" + (submitted && !password ? ' has-error' : '')} >\n                    <MDBInput\n                      label=\"Your password\"\n                      group\n                      type=\"password\"\n                      validate\n                      name=\"password\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <div className=\"text-center py-4 mt-3\">\n                    <MDBBtn color=\"red lighten-3\" type=\"submit\">\n                      Sign In\n                    </MDBBtn>\n                    { loggingIn }\n                    <Link to=\"/sign_up\" className=\"btn btn-link\">Sign Up</Link>\n                  </div>\n                </form>\n              </MDBCardBody>\n            </MDBCard>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    );\n  }\n}\n\nfunction mapStateToProps(state){\n  const { loggingIn } = state.authentication;\n  return {\n    loggingIn\n  };\n}\n\nconst SignInForm = connect(mapStateToProps)(ConnectedSignIn);\n  \nexport default SignInForm;","import React, { Component } from 'react';\nimport { userActions } from '../../actions/userActions';\nimport {Link} from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nimport {\n    MDBContainer,\n    MDBRow,\n    MDBCol,\n    MDBCard,\n    MDBCardBody,\n    MDBBtn,\n    MDBInput\n} from \"mdbreact\";\n\n\nfunction mapStateToProps(state) {\n  return {\n    registration: state.registration\n  }\n}\n\n\nclass ConnectedUserForm extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      user: {\n        email: '',\n        name: '',\n        password: '',\n        passwordConfirmation: '',\n      },\n      loggedIn: false,\n      submitted: false,\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  handleChange(e){\n    e.preventDefault();\n    const { name, value } = e.target;\n    const { user } = this.state;\n    this.setState({ \n      user: {\n        ...user,\n        [name]: value\n      }\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n    this.setState({ submitted: true });\n    const { user } = this.state;\n    const { dispatch } = this.props;\n    if(user.email && user.password && user.name){\n      dispatch(userActions.register(user));\n    }\n  }\n\n  render() {\n\n    const { user, submitted } = this.state;\n\n    return (\n      <MDBContainer id=\"user-form\">\n        <MDBRow>\n          <MDBCol md=\"6\">\n            <MDBCard>\n                <MDBCardBody>\n                <form className=\"signUpForm\" onSubmit={this.handleSubmit}>\n                    <p className=\"h4 text-center py-4\">Sign up</p>\n                    <div className={'form-group' + (submitted && !user.name ? ' has-error' : '')}>\n                      <MDBInput\n                        label=\"Your name\"\n                        group\n                        type=\"text\"\n                        validate\n                        error=\"wrong\"\n                        success=\"right\"\n                        name=\"name\"\n                        className=\"form-control\"\n                        onChange={this.handleChange}\n                      />\n                    </div>\n                    <div className={'form-group' + (submitted && !user.email ? ' has-error' : '')}>\n                      <MDBInput\n                        label=\"Your email\"\n                        group\n                        type=\"email\"\n                        validate\n                        error=\"wrong\"\n                        success=\"right\"\n                        name=\"email\"\n                        className=\"form-control\"\n                        onChange={this.handleChange}\n                      />\n                    </div>\n                    <div className={'form-group' + (submitted && !user.password ? ' has-error' : '')}>\n                      <MDBInput\n                        label=\"Password\"\n                        group\n                        type=\"password\"\n                        validate\n                        name=\"password\"\n                        className=\"form-control\"\n                        onChange={this.handleChange}\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                       <MDBInput\n                        label=\"Password Confirmation\"\n                        group\n                        type=\"password\"\n                        validate\n                        error=\"wrong\"\n                        success=\"right\"\n                        name=\"passwordConfirmation\"\n                        onChange={this.handleChange}\n                      />\n                    </div>\n                    <div className=\"text-center py-4 mt-3\">\n                      <MDBBtn color=\"red lighten-3\" type=\"submit\">\n                        Sign Up\n                      </MDBBtn>\n                      <Link to=\"/sign_in\" className=\"btn btn-link\">Already a user? Sign In</Link>\n                    </div>\n                  </form>\n                </MDBCardBody>\n              </MDBCard>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n    );\n  }\n}\n\nconst SignUpForm = connect(mapStateToProps)(ConnectedUserForm);\n  \nexport default SignUpForm;","import React, { Component } from 'react';\nimport NavBar from './partials/NavBar';\nimport Landing from './Landing';\nimport AddMood from './mood/AddMood';\nimport MoodHistory from './mood/MoodHistory'\nimport Dashboard from './Dashboard';\nimport MoodJumbotron from './mood/Jumbotron';\nimport SignInForm from './partials/SignIn';\nimport SignUpForm from './partials/SignUp';\nimport { connect } from 'react-redux';\nimport { history } from '../helpers/history';\nimport { alertActions } from '../actions/alertActions';\nimport { Router, Switch, Route } from 'react-router-dom';\n\nclass connectedApp extends Component {\n    constructor(props){\n        super(props);\n\n        const { dispatch } = this.props;\n        history.listen((location, action) => {\n            dispatch(alertActions.clear());\n        });\n    }\n\n\n    render(){\n\n        return (\n            <div>\n                {alert.message && <div className={`alert ${alert.type}`}>{alert.message}</div>}\n            <Router history={history}>\n            <div className=\"App\">\n            <NavBar />\n            <main className=\"content\">\n                <Switch>\n                    <Route exact path=\"/\" component={Landing}/>\n                    <Route exact path=\"/dashboard\" component={Dashboard} />\n                    <Route exact path=\"/moodtracker\" component={MoodJumbotron}/>\n                    <Route expact path=\"/sign_in\" component={SignInForm}/>\n                    <Route exact path=\"/sign_up\" component={SignUpForm}/>\n                    <Route path=\"/moodtracker/add\" component={AddMood} />\n                    <Route path=\"/moodtracker/history\" component={MoodHistory} />\n                </Switch>\n            </main>\n            </div>\n            </Router>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    const { alert } = state;\n    return {\n        alert\n    };\n}\n\nconst App = connect(mapStateToProps)(connectedApp);\n\nexport default App;","import { userConstants } from '../constants/userConstants';\n\nlet user = JSON.parse(localStorage.getItem('user'));\n\nconst initialState = user ? { loggedIn: true, user } : {};\n\nexport function authentication(state = initialState, action){\n    switch(action.type){\n        case userConstants.LOGIN_REQUEST:\n            return {\n              loggingIn: true,\n              user: action.user\n            };\n        case userConstants.LOGIN_SUCCESS:\n            return {\n              loggedIn: true,\n              user: action.user\n            };\n        case userConstants.LOGIN_FAILURE:\n            return {};\n        case userConstants.LOGOUT:\n            return {};\n        default:\n            return state;\n    }\n}","import { alert } from './alertReducer';\nimport { authentication } from './authReducer';\nimport { saveMood } from './moodReducer';\nimport { combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({\n    alert, \n    authentication,\n    saveMood\n})\n\nexport default rootReducer;","import { alertConstants } from '../constants/alertCon';\n\nexport function alert(state = {}, action){\n    switch (action.type) {\n        case alertConstants.SUCCESS:\n            return {\n                type: 'alert-success',\n                message: action.message\n            };\n        case alertConstants.ERROR:\n            return {\n                type: 'alert-danger',\n                message: action.message\n            };\n        case alertConstants.CLEAR:\n            return {};\n        default:\n            return state\n    }\n}\n","import { moodConstants } from '../constants/moodConstants';\n\nexport function saveMood(state = {}, action){\n    switch(action.type){\n        case moodConstants.ADD_MOOD:\n            return {\n                addingMood: true,\n                mood: action.mood\n            };\n        case moodConstants.ADD_SUCCESS:\n            return {\n                moodAdded: true,\n                mood: action.mood\n            };\n        case moodConstants.ADD_ERROR:\n            return {};\n        case moodConstants.MOODHISTORY_REQUEST:\n            return {\n                loading: true\n            };\n        case moodConstants.MOODHISTORY_SUCCESS:\n            return {\n                items: action.moods\n            };\n        case moodConstants.MOODHISTORY_FAILURE:\n            return {\n                error: action.error\n            };\n        default:\n            return state;\n    }\n}","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from '../reducers';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\n\nconst loggerMiddleware = createLogger();\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(\n        thunkMiddleware,\n        loggerMiddleware\n    )\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport store from './store/index';\nimport { Provider } from 'react-redux';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nReactDOM.render(\n<Provider store={store}>\n <App />\n </Provider>\n , document.getElementById('root')\n);\n"],"sourceRoot":""}